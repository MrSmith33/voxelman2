module deps.enet;
extern(C) void enet_address_get_host();
extern(C) void enet_address_get_host_ip();
extern(C) void enet_address_set_host();
extern(C) void enet_crc32();
extern(C) void enet_deinitialize();
extern(C) void enet_host_bandwidth_limit();
extern(C) void enet_host_broadcast();
extern(C) void enet_host_channel_limit();
extern(C) void enet_host_check_events();
extern(C) void enet_host_compress();
extern(C) void enet_host_compress_with_range_coder();
extern(C) void enet_host_connect();
extern(C) void enet_host_create();
extern(C) void enet_host_destroy();
extern(C) void enet_host_flush();
extern(C) void enet_host_service();
extern(C) void enet_initialize();
extern(C) void enet_initialize_with_callbacks();
extern(C) void enet_linked_version();
extern(C) void enet_packet_create();
extern(C) void enet_packet_destroy();
extern(C) void enet_packet_resize();
extern(C) void enet_peer_disconnect();
extern(C) void enet_peer_disconnect_later();
extern(C) void enet_peer_disconnect_now();
extern(C) void enet_peer_ping();
extern(C) void enet_peer_ping_interval();
extern(C) void enet_peer_receive();
extern(C) void enet_peer_reset();
extern(C) void enet_peer_send();
extern(C) void enet_peer_throttle_configure();
extern(C) void enet_peer_timeout();
extern(C) void enet_range_coder_compress();
extern(C) void enet_range_coder_create();
extern(C) void enet_range_coder_decompress();
extern(C) void enet_range_coder_destroy();
extern(C) void enet_socket_accept();
extern(C) void enet_socket_bind();
extern(C) void enet_socket_connect();
extern(C) void enet_socket_create();
extern(C) void enet_socket_destroy();
extern(C) void enet_socket_get_address();
extern(C) void enet_socket_get_option();
extern(C) void enet_socket_listen();
extern(C) void enet_socket_receive();
extern(C) void enet_socket_send();
extern(C) void enet_socket_set_option();
extern(C) void enet_socket_shutdown();
extern(C) void enet_socket_wait();
extern(C) void enet_socketset_select();
extern(C) void enet_time_get();
extern(C) void enet_time_set();
