module deps.enet;
extern(C):
void enet_address_get_host();
void enet_address_get_host_ip();
void enet_address_set_host();
void enet_address_set_host_ip();
void enet_crc32();
void enet_deinitialize();
void enet_host_bandwidth_limit();
void enet_host_broadcast();
void enet_host_channel_limit();
void enet_host_check_events();
void enet_host_compress();
void enet_host_compress_with_range_coder();
void enet_host_connect();
void enet_host_create();
void enet_host_destroy();
void enet_host_flush();
void enet_host_service();
void enet_initialize();
void enet_initialize_with_callbacks();
void enet_linked_version();
void enet_packet_create();
void enet_packet_destroy();
void enet_packet_resize();
void enet_peer_disconnect();
void enet_peer_disconnect_later();
void enet_peer_disconnect_now();
void enet_peer_ping();
void enet_peer_ping_interval();
void enet_peer_receive();
void enet_peer_reset();
void enet_peer_send();
void enet_peer_throttle_configure();
void enet_peer_timeout();
void enet_range_coder_compress();
void enet_range_coder_create();
void enet_range_coder_decompress();
void enet_range_coder_destroy();
void enet_socket_accept();
void enet_socket_bind();
void enet_socket_connect();
void enet_socket_create();
void enet_socket_destroy();
void enet_socket_get_address();
void enet_socket_get_option();
void enet_socket_listen();
void enet_socket_receive();
void enet_socket_send();
void enet_socket_set_option();
void enet_socket_shutdown();
void enet_socket_wait();
void enet_socketset_select();
void enet_time_get();
void enet_time_set();
